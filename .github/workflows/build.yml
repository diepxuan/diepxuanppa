# Runs tests and verifies that the package can be built.
name: Build

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [main]

  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  package-load:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
    outputs:
      packages: ${{ steps.packages.outputs.packages }}
    steps:
      - uses: actions/checkout@v4
      - name: Generate matrix data
        id: packages
        shell: bash
        run: |
          pkgs=$(ls -l src/diepxuan/ | grep '^d' | awk '{print $NF}' | while read dir; do echo $dir; done)
          json=$(printf '%s\n' "${pkgs}" | jq -R . | jq -s -c .)
          echo "packages=$json" >> "$GITHUB_OUTPUT"
  # This workflow contains a single job called "build"
  package-build:
    needs: package-load
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, ubuntu-22.04, ubuntu-24.04, debian-10, debian-11, debian-12]  # Các phiên bản OS để build
        architecture: [amd64, arm64]
        include:
          - os: ubuntu-18.04
            base_image: ubuntu:18.04
            codename: bionic
          - os: ubuntu-20.04
            base_image: ubuntu:20.04
            codename: focal
          - os: ubuntu-22.04
            base_image: ubuntu:22.04
            codename: jammy
          - os: ubuntu-24.04
            base_image: ubuntu:24.04
            codename: lunar
          - os: debian-10
            base_image: debian:10
            codename: buster
          - os: debian-11
            base_image: debian:11
            codename: bullseye
          - os: debian-12
            base_image: debian:12
            codename: bookworm
        m2module: ${{ fromJSON(needs.package-load.outputs.packages) }}
    name: Build "${{ matrix.m2module }}" module on ${{ matrix.architecture }}/${{ matrix.os }} (${{ matrix.codename }})
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup GPG
        uses: diepxuan/.github/.github/actions/gpg-setup@main
        with:
          gpg_key: ${{ secrets.GPG_KEY }}
          gpg_key_id: ${{ secrets.GPG_KEY_ID }}
          committer_email: ${{ secrets.GIT_COMMITTER_EMAIL }}
          committer_name: ${{ github.repository_owner }}

      - name: SSH configuration
        uses: diepxuan/.github/.github/actions/ssh-setup@main
        with:
          ssh_key_id: ${{ secrets.SSH_ID_RSA }}

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3  # Cài đặt Docker Buildx

      - name: Build and push Docker container
        uses: docker/build-push-action@v6  # Sử dụng Docker Build and Push Action
        with:
          context: . # Thư mục chứa Dockerfile
          no-cache: true  # Không sử dụng cache
          push: false  # Chỉ build mà không push image
          tags: diepxuan:build-${{ matrix.os }}-${{ matrix.architecture }}  # Tag cho Docker image theo OS
          build-args: |
            BASE_IMAGE=${{ matrix.base_image }}
            TIMEZONE=Asia/Ho_Chi_Minh
        env:
          TZ: Asia/Ho_Chi_Minh
      
      - name: Run build package inside Docker container
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace diepxuan:build-${{ matrix.os }}-${{ matrix.architecture }} bash -c "
            apt update
            apt-get build-dep -y -- src/diepxuan/${{ matrix.m2module }}
            apt install -y reprepro gnupg
            cd src/diepxuan/${{ matrix.m2module }}
            dpkg-buildpackage --force-sign
          "

      - name: Installing build dependencies
        working-directory: src/diepxuan/${{ matrix.m2module }}
        run: |
          sudo apt update
          sudo apt-get build-dep -y -- .
          sudo apt install -y reprepro gnupg
      
      - name: Build package
        if: false
        working-directory: src/diepxuan/${{ matrix.m2module }}
        shell: bash
        run: |
          dpkg-buildpackage --force-sign

      - name: Add .deb files to APT repository
        shell: bash
        run: |
          # mv src/diepxuan/*.deb dists/
          while read -r file; do
            dpkg-deb -I "src/diepxuan/$file"
            reprepro -V includedeb ${{ matrix.codename }} "src/diepxuan/$file" || true
          done < <(ls src/diepxuan/ | grep -E '.*(.deb)$')

      - name: Push changes to GitHub
        run: |
          # if git status --porcelain=v1 2>/dev/null | grep -q .; then
          if [ -n "$(git status --porcelain=v1 2>/dev/null)" ]; then
            git add .
            git commit -m "${GIT_COMMITTER_MESSAGE:-'Auto-commit add .deb files to APT repository'}"
            if ! git push; then
              git stash
              git pull --rebase
              git stash pop
              git push || true
            fi
          fi